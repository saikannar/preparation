Annotations:
@BeforeSuite: The annotated method will be run before all tests in this suite have run. 
@AfterSuite: The annotated method will be run after all tests in this suite have run. 
@BeforeTest: The annotated method will be run before any test method belonging to the classes inside the <test> tag is run. 
@AfterTest: The annotated method will be run after all the test methods belonging to the classes inside the <test> tag have run. 
@BeforeGroups: The list of groups that this configuration method will run before. This method is guaranteed to run shortly before the first test method that belongs to any of these groups is invoked. 
@AfterGroups: The list of groups that this configuration method will run after. This method is guaranteed to run shortly after the last test method that belongs to any of these groups is invoked. 
@BeforeClass: The annotated method will be run before the first test method in the current class is invoked. 
@AfterClass: The annotated method will be run after all the test methods in the current class have been run. 
@BeforeMethod: The annotated method will be run before each test method. 
@AfterMethod: The annotated method will be run after each test method.

Attributes:
alwaysRun ->If set to true, this test method will always be run even if it depends on a method that failed.

dataProvider ->The name of the data provider for this test method.
dataProviderClass ->The class where to look for the data provider. If not specified, the data provider will be looked on the class of the current test method or one of its base classes. If this attribute is specified, the data provider method needs to be static on the specified class.

dependsOnGroups ->The list of groups this method depends on.

dependsOnMethods ->The list of methods this method depends on.

description ->The description for this method.

enabled	->Whether methods on this class/method are enabled.

expectedExceptions ->The list of exceptions that a test method is expected to throw. If no exception or a different than one on this list is thrown, this test will be marked a failure.

groups ->The list of groups this class/method belongs to.
invocationCount ->The number of times this method should be invoked.
invocationTimeOut ->The maximum number of milliseconds this test should take for the cumulated time of all the invocationcounts. This attribute will be ignored if invocationCount is not specified.

priority ->The priority for this test method. Lower priorities will be scheduled first.

successPercentage ->The percentage of success expected from this method

singleThreaded ->If set to true, all the methods on this test class are guaranteed to run in the same thread, even if the tests are currently being run with parallel="methods". This attribute can only be used at the class level and it will be ignored if used at the method level. Note: this attribute used to be called sequential (now deprecated).

timeOut ->The maximum number of milliseconds this test should take.

threadPoolSize ->The size of the thread pool for this method. The method will be invoked from multiple threads as specified by invocationCount. 
Note: this attribute is ignored if invocationCount is not specified.

Difference bitween parameters and dataproviders?

Parameters : The Parameters is used, when you need to pass a static data for your test cases. which remains unchanged throughout the execution of test cases. Which is purely implemented in XML file. 
Ex: <parameter name="locator" value=""></parameter>

Data Provider: The Data Provider is used, when you need to pass a Dynamic data for your test cases. which will changes for each iteration  of a test cases.
Ex: @DataProvider(name="value")

